# ------------------------------------------------
# Case Name:
#     case_rfc2616_POST-stale-URLs-in-Location-Content-Location
# Case Description: 
#     POST method MUST stale all cached URLs in response  Location or Content-Location headers
# Testing Steps:
#    step 1: caching URL-A
#    step 2: checking whether URL-A cached
#    step 3: caching URL-B
#    step 4: checking whether URL-B cached
#    step 5: POST request and reponsed location values URL-A, content-location values URL-B 
#    step 6: checking whether URL-A staled
#    step 7: checking whether URL-B staled
#    Author: tutong@taobao.com
# -----------------------------------------------
#
#step 1
--- {
     Request: {
        method: GET,
        uri: '/url-a',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.alibaba.com",
    },
    ServerCheck: {
        method: GET,
        uri: '/url-a',
        Host: "macaroon.alibaba.com",
    },
    Response: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-Control: public,
        Content-Length: 15,
        Last-Modified: now - 31536000,
        Expires: now + 31536000,
        Connection: close,
        body: urla-aaaaaaaaaa,
        
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-control: public,
        Content-length: 15,
        Last-Modified: now - 31536000,
        Expires: now + 31536000,
        Connection: close,
       body: urla-aaaaaaaaaa,
    }
}

#step 2
--- {
     Request: {
        method: GET,
        uri: '/url-a',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.alibaba.com",
    },
    ServerCheck: {
        uri: EXCLUDE,
    },
   ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
       body: urla-aaaaaaaaaa,
    }
}

#step 3
--- {
     Request: {
        method: GET,
        uri: '/url-b',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.alibaba.com",
    },
 ServerCheck: {
        method: GET,
        uri: '/url-b',
        Host: "macaroon.alibaba.com",
   },
     Response: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-Control: public,
        Last-Modified: now - 31536000,
        Expires: now + 31536000,
        Connection: close,
        body: urlb-bbbbbbbbbb,
        Content-Length: 15,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 15,
       body: urlb-bbbbbbbbbb,
    }
}
#step 4
--- {
     Request: {
        method: GET,
        uri: '/url-b',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.alibaba.com",
    },
    ServerCheck: {
        uri: EXCLUDE,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 15,
        body: urlb-bbbbbbbbbb,
    }
}
#step 5
--- {
     Request: {
        method: POST,
        uri: '/posturl',
        protocol: HTTP/1.1,
        Connection: close,
        Content-Length: 23,
        Host: "macaroon.alibaba.com",
        body: post_content-cccccccccc,
    },
 ServerCheck: {
        method: POST,
        uri: '/posturl',
        Host: "macaroon.alibaba.com",
        body: post_content-cccccccccc,
    },
     Response: {
        protocol: HTTP/1.1,
        statuscode: 201,
        Location: 'http://macaroon.zymlinux.net/url-a',
        Content-Location: 'http://macaroon.zymlinux.net/url-b',
        Last-Modified: now - 31536000,
        Connection: close,
        Content-Length: 15,
        body: resp-aaaaabbbbb,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 201,
        Location: 'http://macaroon.zymlinux.net/url-a',
        Content-Location: 'http://macaroon.zymlinux.net/url-b',
        Content-Length: 15,
        Connection: close,
        body: resp-aaaaabbbbb,
    }
}
#step 6:  checking whether previous transaction purged A 
--- {
     Request: {
        method: GET,
        uri: '/url-a',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.alibaba.com",
    },
    servercheck: {
        uri: 'url-a',
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
       body: urla-aaaaaaaaaa,
    }
}
#step 7:  checking whether previous transaction purged A 
--- {
     Request: {
        method: GET,
        uri: '/url-b',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.alibaba.com",
    },
    servercheck: {
        uri: '/url-b',
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
       body: urlb-bbbbbbbbbb,
    }
}
